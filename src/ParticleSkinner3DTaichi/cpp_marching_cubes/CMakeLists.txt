project( cpp_marching_cubes )
cmake_minimum_required(VERSION 3.18)

include( CMakeSourceFiles.txt )
set(CMAKE_CXX_STANDARD 20)
add_definitions( -std=c++20 -O3 -w )
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

string( TIMESTAMP BUILD_DATE_TIME "%Y-%m-%d %H:%M:%S" )
configure_file( "${CMAKE_CURRENT_SOURCE_DIR}/CompileDefinitions.h.in" "${CMAKE_CURRENT_SOURCE_DIR}/CompileDefinitions.h" @ONLY )

add_executable( cpp_marching_cubes ${Headers} ${Sources} )

if( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" )
  target_compile_definitions( cpp_marching_cubes PUBLIC CMAKE_DETECTED_GNU_COMPILER )
elseif( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel" )
  target_compile_definitions( cpp_marching_cubes PUBLIC CMAKE_DETECTED_INTEL_COMPILER )
elseif( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" )
  target_compile_definitions( cpp_marching_cubes PUBLIC CMAKE_DETECTED_CLANG_COMPILER )
elseif( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "AppleClang" )
  target_compile_definitions( cpp_marching_cubes PUBLIC CMAKE_DETECTED_CLANG_COMPILER )
elseif( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC" )
  target_compile_definitions( cpp_marching_cubes PUBLIC CMAKE_DETECTED_MSVC_COMPILER )
else()
  message( FATAL_ERROR "Unsupported C++ compiler ${CMAKE_CXX_COMPILER_ID}. Please email the maintainer." )
endif()

find_package( Eigen3 3.2.9 REQUIRED )
target_include_directories( cpp_marching_cubes SYSTEM PUBLIC ${EIGEN3_INCLUDE_DIR} )
target_compile_definitions( cpp_marching_cubes PUBLIC EIGEN_DONT_PARALLELIZE )
if( CMAKE_BUILD_TYPE STREQUAL "Debug" )
  target_compile_definitions( cpp_marching_cubes PUBLIC EIGEN_DONT_ALIGN EIGEN_INITIALIZE_MATRICES_BY_NAN )
endif()
